# Generated by Django 2.0.13 on 2019-02-28 19:32

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Appeal',
            fields=[
                ('id',
                 models.UUIDField(
                     default=uuid.uuid4,
                     editable=False,
                     primary_key=True,
                     serialize=False)),
                ('description', models.CharField(max_length=250)),
                ('original_appeal_id', models.CharField(max_length=50)),
                ('medicare_part',
                 models.CharField(
                     choices=[('e', 'Entitlement'), ('ffsa',
                                                     'FFS-Part A only'),
                              ('ffsb', 'FFS-Part B only'), ('d', 'Part D'),
                              ('ffsba', 'FFS-Part B of A'),
                              ('mccost', 'MC-COST'), ('mchcpp', 'MC-HCPP'),
                              ('mcma', 'MC-MA Organization (MAO)'),
                              ('mcpace', 'MC-PACE'), ('553lcs', '522-LCD'),
                              ('birmaa', 'Part B IRMAA'),
                              ('dirmma', 'Part D IRMAA')],
                     max_length=50)),
                ('requestor_type',
                 models.CharField(
                     choices=[('aor', 'AOR'),
                              ('ncprovider', 'Non-Contract Provider'),
                              ('ag', 'Advocacy Group'), ('ar',
                                                         'Appointed Rep'),
                              ('a', 'Attorney'), ('b', 'Beneficfiary'),
                              ('cm', 'Congress Member'), ('e', 'Estate'),
                              ('f', 'Family'), ('partd', 'Part D Plan'),
                              ('pp', 'Prescribing Physician'),
                              ('provider', 'Provider'),
                              ('sma', 'State Medicaid Agency'), ('o',
                                                                 'Other')],
                     max_length=50)),
                ('service_category',
                 models.CharField(
                     choices=[('01', 'Practitioner Services'),
                              ('02', 'Emergency Room'),
                              ('03', 'Acute Inpatient Hospital'),
                              ('04', 'Office-based Lab/X-ray'),
                              ('05', 'Nursing Home'),
                              ('06', 'Outpatient Therapies/CORF'),
                              ('07', 'Ground Transportation'),
                              ('08', 'Home Health'), ('11', 'Hospice'),
                              ('12', 'Non-Medicare Benefit'),
                              ('21', 'Out of Area'),
                              ('24', 'Skilled Nursing Facility'),
                              ('26', 'Air Ambulance'),
                              ('30', 'Pathology/Laboratory'),
                              ('31', 'Imaging/Radiology'), ('32', 'Drugs'),
                              ('33', 'Vision Services'), ('34',
                                                          'Chiropractic'),
                              ('35', 'Dental'), ('39', 'AC Dismissal'),
                              ('41', 'Outpatient Hospital/ASC'),
                              ('42', 'Acute Inpatient Rehab.'),
                              ('43', 'Acute Inpatient Psych'),
                              ('44', 'Outpt Psych/Com Mental Hlth'),
                              ('45', 'Partial Psych Hosp'),
                              ('46', 'Intermediate Care'),
                              ('47', 'Long Term Care Hospital'),
                              ('48', 'Rurla Health Clinic/FQHC'),
                              ('49', 'SRD Facility'), ('50', 'Other'),
                              ('51', 'Medical/Surgical Supplies'),
                              ('52', 'Hosp Bed & Support Surfaces'),
                              ('53', 'Oxygen'), ('54', 'Manual Wheelchairs'),
                              ('55', 'Miscellaneous DMEPOS'), ('56',
                                                               'Orthoses'),
                              ('57', 'Drugs Miscellaneous'),
                              ('58', 'Enteral/Parenteral Nutri.'),
                              ('59', 'Glucose Monitors'),
                              ('60', 'Office E/M Services'),
                              ('61', 'Hospital E/M Services'),
                              ('62', 'Facility E/M: SNF/Asst/Home'),
                              ('65', 'Integum/musc-skeletal Sur'),
                              ('66', 'Respiratory/Cardiovsclr Sur'),
                              ('67', 'Nervous System Surgery'),
                              ('68', 'Gastro./Urinary/Genital Sur'),
                              ('69', 'Other Surgery'), ('70', 'Anesthesia'),
                              ('71', 'Podiatry'),
                              ('72', 'Radiation/Chemo/Infusion'),
                              ('73', 'Audiology'), ('74', 'IDTF'),
                              ('79', 'Technical Denial'), ('80', 'MSP'),
                              ('81', 'Copay/Deductible'), ('82',
                                                           'Eligibility'),
                              ('83', 'Consolidated Billing'),
                              ('84', 'Infustion Pumps'),
                              ('85', 'Nebulizers & Drugs'), ('87',
                                                             'Prostheses'),
                              ('88', 'Ostomy & Urological'),
                              ('89', 'Pos. Airway Pressure Device'),
                              ('90', 'Neg. Pressure Wound Therapy'),
                              ('91', 'Pneumatic compressor'), ('92',
                                                               'Repairs'),
                              ('93', 'Respiratroy-Miscellaneous'),
                              ('94', 'Surgical Dressings'),
                              ('95', 'Therapeutic Shoes')],
                     max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'appeal',
            },
        ),
        migrations.CreateModel(
            name='AppealToClaim',
            fields=[
                ('id',
                 models.UUIDField(
                     default=uuid.uuid4,
                     editable=False,
                     primary_key=True,
                     serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appeal',
                 models.ForeignKey(
                     on_delete=django.db.models.deletion.CASCADE,
                     to='appeals.Appeal')),
            ],
            options={
                'db_table': 'appeal_to_claim',
            },
        ),
        migrations.CreateModel(
            name='Appellant',
            fields=[
                ('id',
                 models.UUIDField(
                     default=uuid.uuid4,
                     editable=False,
                     primary_key=True,
                     serialize=False)),
                ('description', models.CharField(max_length=250)),
                ('appellant_type', models.CharField(max_length=60)),
                ('medicare_beneficiary_id', models.CharField(max_length=60)),
                ('name', models.CharField(max_length=60)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'appellant',
            },
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id',
                 models.UUIDField(
                     default=uuid.uuid4,
                     editable=False,
                     primary_key=True,
                     serialize=False)),
                ('description', models.CharField(max_length=250)),
                ('original_claim_id', models.CharField(max_length=50)),
                ('claim_type', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=50)),
                ('service_place', models.CharField(max_length=50)),
                ('amount_billed',
                 models.DecimalField(
                     decimal_places=2, default=Decimal('0.00'), max_digits=9)),
                ('amount_paid',
                 models.DecimalField(
                     decimal_places=2, default=Decimal('0.00'), max_digits=9)),
                ('amount_controversy',
                 models.DecimalField(
                     decimal_places=2, default=Decimal('0.00'), max_digits=9)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'claim',
            },
        ),
        migrations.CreateModel(
            name='HollisticAppeal',
            fields=[
                ('id',
                 models.UUIDField(
                     default=uuid.uuid4,
                     editable=False,
                     primary_key=True,
                     serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'hollistic_appeal',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id',
                 models.UUIDField(
                     default=uuid.uuid4,
                     editable=False,
                     primary_key=True,
                     serialize=False)),
                ('level_name',
                 models.CharField(
                     choices=[('lvl1', 'Level 1'), ('lvl2', 'Level 2'),
                              ('lvl3', 'Level 3'), ('lvl4', 'Level 4')],
                     max_length=50)),
                ('description', models.CharField(max_length=250)),
                ('reviewer_name', models.CharField(max_length=60)),
                ('reviewer_type', models.CharField(max_length=25)),
                ('location', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appeal',
                 models.OneToOneField(
                     on_delete=django.db.models.deletion.CASCADE,
                     to='appeals.Appeal')),
                ('hollistic_appeal',
                 models.ForeignKey(
                     on_delete=django.db.models.deletion.CASCADE,
                     to='appeals.HollisticAppeal')),
            ],
            options={
                'db_table': 'level',
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id',
                 models.UUIDField(
                     default=uuid.uuid4,
                     editable=False,
                     primary_key=True,
                     serialize=False)),
                ('description', models.CharField(max_length=250)),
                ('provider_type', models.CharField(max_length=60)),
                ('national_provider_id', models.CharField(max_length=25)),
                ('name', models.CharField(max_length=60)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'provider',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id',
                 models.UUIDField(
                     default=uuid.uuid4,
                     editable=False,
                     primary_key=True,
                     serialize=False)),
                ('description', models.CharField(max_length=250)),
                ('status_type', models.CharField(max_length=60)),
                ('action', models.CharField(max_length=60)),
                ('is_current', models.CharField(max_length=60)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appeal',
                 models.ForeignKey(
                     on_delete=django.db.models.deletion.CASCADE,
                     to='appeals.Appeal')),
            ],
            options={
                'db_table': 'status',
            },
        ),
        migrations.AddField(
            model_name='appealtoclaim',
            name='claim',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='appeals.Claim'),
        ),
        migrations.AddField(
            model_name='appeal',
            name='appellant',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='appeals.Appellant'),
        ),
        migrations.AddField(
            model_name='appeal',
            name='claims',
            field=models.ManyToManyField(
                through='appeals.AppealToClaim', to='appeals.Claim'),
        ),
        migrations.AddField(
            model_name='appeal',
            name='hollistic_appeal',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='appeals.HollisticAppeal'),
        ),
        migrations.AddField(
            model_name='appeal',
            name='provider',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='appeals.Provider'),
        ),
    ]
